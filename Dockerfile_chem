
FROM ubuntu:20.04

RUN apt-get update && \
    apt-get install -yq tzdata && \
    ln -fs /usr/share/zoneinfo/Asia/Kathmandu /etc/localtime && \
    dpkg-reconfigure -f noninteractive tzdata

# GCC CPP GFORTRAN
RUN apt-get update &&\
    apt-get install -y sudo git bash unattended-upgrades wget csh tar build-essential gfortran m4 zlib1g-dev \
    libbz2-dev flex libxt-dev libxaw-doc bison flex byacc 

RUN echo 'alias yacc="bison"' >> ~/.bashrc

WORKDIR /BUILD_WRF/LIBRARIES
RUN wget -q https://www2.mmm.ucar.edu/wrf/OnLineTutorial/compile_tutorial/tar_files/mpich-3.0.4.tar.gz \
         https://www2.mmm.ucar.edu/wrf/OnLineTutorial/compile_tutorial/tar_files/netcdf-4.1.3.tar.gz \
         https://www2.mmm.ucar.edu/wrf/OnLineTutorial/compile_tutorial/tar_files/jasper-1.900.1.tar.gz \
         https://www2.mmm.ucar.edu/wrf/OnLineTutorial/compile_tutorial/tar_files/libpng-1.2.50.tar.gz \
         https://www2.mmm.ucar.edu/wrf/OnLineTutorial/compile_tutorial/tar_files/zlib-1.2.7.tar.gz


## Install Libraries
ENV DIR=/Build_WRF/Build_WRF/LIBRARIES CC=gcc CXX=g++ FC=gfortran FCFLAGS=-m64 F77=gfortran FFLAGS=-m64 JASPERLIB=$DIR/grib2/lib \
    JASPERINC=$DIR/grib2/include LDFLAGS=-L$DIR/grib2/lib CPPFLAGS=-I$DIR/grib2/include

## NETCDF
RUN tar xzvf netcdf-4.1.3.tar.gz  && cd netcdf-4.1.3 &&\
    ./configure --prefix=$DIR/netcdf --disable-dap --disable-netcdf-4 --disable-shared &&\
    make &&\
    make install &&\
    cd ..
ENV PATH=$DIR/netcdf/bin/:$PATH

## MPICH
RUN tar -zxvf mpich-3.0.4.tar.gz && cd mpich-3.0.4 &&\
    ./configure --prefix=$DIR/mpich &&\
    make &&\
    make install 
ENV PATH=$DIR/mpich/bin/:$PATH

## ZLIB
RUN tar -xzvf zlib-1.2.7.tar.gz  &&\
     cd zlib-1.2.7 &&\
    ./configure --prefix=$DIR/grib2 &&\
    make &&\
    make install 

## libpng
RUN tar -xzvf libpng-1.2.50.tar.gz && cd libpng-1.2.50 &&\
    ./configure --prefix=$DIR/grib2 &&\
    make &&\
    make install 

# Jasper
RUN tar -xzvf jasper-1.900.1.tar.gz  && cd jasper-1.900.1 &&\
    ./configure --prefix=$DIR/grib2 &&\
    make &&\
    make install 

ENV NETCDF=$DIR/netcdf
ENV LD_LIBRARY_PATH=$DIR/grib2/lib

### WRF
WORKDIR /BUILD_WRF

ENV EM_CORE=1 NMM_CORE=0 WRF_CHEM=1 WRF_KPP=1 YACC='/bin/yacc -d' FLEX=/usr/bin/flex FLEX_LIB_DIR=/usr/lib64 \
    KPP_HOME=/Build_WRF/WRF-4.1.2/chem/KPP/kpp/kpp-2.1 \
    WRF_SRC_ROOT_DIR=/Build_WRF/WRF-4.1.2 \
    PATH=$KPP_HOME/bin:$PATH \
    SED=/usr/bin/sed \
    WRFIO_NCD_LARGE_FILE_SUPPORT=1 


RUN wget https://github.com/wrf-model/WRF/archive/v4.1.2.tar.gz && tar -xvzf v4.1.2.tar.gz 
RUN cd WRF-4.1.2/chem/KPP/kpp/kpp-2.1/src && flex scan.l && cd /BUILD_WRF/WRF-4.1.2 &&\
    echo 34 | ./configure 
    
RUN cd /BUILD_WRF/WRF-4.1.2 &&\ ./compile 
RUN cd /BUILD_WRF/WRF-4.1.2 &&\ ./compile em_real
    
# ## WPS
# RUN git clone https://github.com/wrf-model/WPS.git && cd WPS &&\
#     ./clean &&\
#     echo 1 | ./configure &&\
#     ./compile

# RUN echo "wget https://www2.mmm.ucar.edu/wrf/src/wps_files/geog_high_res_mandatory.tar.gz" >> geog.sh &&\
#     chmod +x geog.sh



